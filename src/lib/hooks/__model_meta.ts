/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, email: {
                    name: "email",
                    type: "String",
                }, username: {
                    name: "username",
                    type: "String",
                }, phoneNumber: {
                    name: "phoneNumber",
                    type: "String",
                }, verifiedEmail: {
                    name: "verifiedEmail",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, verifiedPhone: {
                    name: "verifiedPhone",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, preferredMfa: {
                    name: "preferredMfa",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "email" }] }],
                }, otpSecret: {
                    name: "otpSecret",
                    type: "String",
                    isOptional: true,
                }, otpExpiry: {
                    name: "otpExpiry",
                    type: "DateTime",
                    isOptional: true,
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, imagePosts: {
                    name: "imagePosts",
                    type: "ImagePost",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, events: {
                    name: "events",
                    type: "Event",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, followedBy: {
                    name: "followedBy",
                    type: "Follow",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'followed',
                }, following: {
                    name: "following",
                    type: "Follow",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'follower',
                }, likes: {
                    name: "likes",
                    type: "Like",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, notifications: {
                    name: "notifications",
                    type: "Notification",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, notificationsSent: {
                    name: "notificationsSent",
                    type: "Notification",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'sender',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                }, username: {
                    name: "username",
                    fields: ["username"]
                }, phoneNumber: {
                    name: "phoneNumber",
                    fields: ["phoneNumber"]
                },
            }
            ,
        }
        ,
        like: {
            name: 'Like', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'likes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, post: {
                    name: "post",
                    type: "Post",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'likes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "postId" },
                }, postId: {
                    name: "postId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'post',
                }, imagePost: {
                    name: "imagePost",
                    type: "ImagePost",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'likes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "imagePostId" },
                }, imagePostId: {
                    name: "imagePostId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'imagePost',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, userId_postId: {
                    name: "userId_postId",
                    fields: ["userId", "postId"]
                }, userId_imagePostId: {
                    name: "userId_imagePostId",
                    fields: ["userId", "imagePostId"]
                },
            }
            ,
        }
        ,
        notification: {
            name: 'Notification', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, read: {
                    name: "read",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, type: {
                    name: "type",
                    type: "String",
                }, message: {
                    name: "message",
                    type: "String",
                }, postId: {
                    name: "postId",
                    type: "String",
                    isOptional: true,
                }, imagePostId: {
                    name: "imagePostId",
                    type: "String",
                    isOptional: true,
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'notifications',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, sender: {
                    name: "sender",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'notificationsSent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "senderId" },
                }, senderId: {
                    name: "senderId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'sender',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        follow: {
            name: 'Follow', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, followedId: {
                    name: "followedId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'followed',
                }, followed: {
                    name: "followed",
                    type: "User",
                    isDataModel: true,
                    backLink: 'followedBy',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "followedId" },
                }, followerId: {
                    name: "followerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'follower',
                }, follower: {
                    name: "follower",
                    type: "User",
                    isDataModel: true,
                    backLink: 'following',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "followerId" },
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, followerId_followedId: {
                    name: "followerId_followedId",
                    fields: ["followerId", "followedId"]
                },
            }
            ,
        }
        ,
        post: {
            name: 'Post', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, content: {
                    name: "content",
                    type: "String",
                }, published: {
                    name: "published",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, image: {
                    name: "image",
                    type: "String",
                    isOptional: true,
                }, author: {
                    name: "author",
                    type: "User",
                    isDataModel: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, event: {
                    name: "event",
                    type: "Event",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "eventId" },
                }, eventId: {
                    name: "eventId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'event',
                }, likes: {
                    name: "likes",
                    type: "Like",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'post',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        imagePost: {
            name: 'ImagePost', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, content: {
                    name: "content",
                    type: "String",
                }, published: {
                    name: "published",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, author: {
                    name: "author",
                    type: "User",
                    isDataModel: true,
                    backLink: 'imagePosts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, image: {
                    name: "image",
                    type: "String",
                }, event: {
                    name: "event",
                    type: "Event",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'imagePosts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "eventId" },
                }, eventId: {
                    name: "eventId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'event',
                }, likes: {
                    name: "likes",
                    type: "Like",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'imagePost',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
        event: {
            name: 'Event', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                }, date: {
                    name: "date",
                    type: "DateTime",
                }, location: {
                    name: "location",
                    type: "String",
                }, organizer: {
                    name: "organizer",
                    type: "String",
                }, author: {
                    name: "author",
                    type: "User",
                    isDataModel: true,
                    backLink: 'events',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'event',
                }, imagePosts: {
                    name: "imagePosts",
                    type: "ImagePost",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'event',
                },
            }
            , uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            }
            ,
        }
        ,
    }
    ,
    deleteCascade: {
    }
    ,
    authModel: 'User'
};
export default metadata;
